/*! For license information please see bundle.js.LICENSE.txt */
(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>c});var r=n(537),o=n.n(r),a=n(645),i=n.n(a)()(o());i.push([e.id,"*{\n    margin: 0;\n    padding: 0;\n}\n\n.container{\n    height: 100vh;\n    width: 100vw;\n    display: grid;\n    grid-template-columns: minmax(130px, 180px) 1fr;\n    grid-template-rows: 60px 1fr;\n}\n\nheader{\n    grid-column: 1/3;\n    grid-row: 1/2;\n    background-color: rgba(76, 76, 130, 0.596);\n}\n\nmain{\n    grid-column: 2/3;\n    grid-row: 2/3;\n    background-color: rgba(130, 80, 80, 0.511);\n}\n\naside{\n    background-color: rgba(114, 195, 114, 0.567);\n    grid-column: 1/2;\n    grid-row: 2/3;\n}\n.note{\n border: 5px dashed black;\n font-size: 1.5rem;\n border-radius: 10px;\n padding: 15px;\n margin:10px;\n}\n\n#dialog{\n    position: absolute;\n    height: 200px;\n    width: 400px;\n    top: 250px;\n    left: 550px;\n    padding: 30px;\n\n\n}\n\n#dialog::backdrop{\n    background: rgba(0, 0, 0, 0.696);\n}\n\n.projects{\n    margin-left: 10px;\n    /* height: 100%; */\n}\n.project_list{\n    /* height: 100%; */\n}\n.project_input{\n    cursor: pointer;\n}\n\n.active_project{\n    background-color: rgb(169, 65, 65);\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,aAAa;IACb,+CAA+C;IAC/C,4BAA4B;AAChC;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,0CAA0C;AAC9C;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,0CAA0C;AAC9C;;AAEA;IACI,4CAA4C;IAC5C,gBAAgB;IAChB,aAAa;AACjB;AACA;CACC,wBAAwB;CACxB,iBAAiB;CACjB,mBAAmB;CACnB,aAAa;CACb,WAAW;AACZ;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,YAAY;IACZ,UAAU;IACV,WAAW;IACX,aAAa;;;AAGjB;;AAEA;IACI,gCAAgC;AACpC;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;AACtB;AACA;IACI,kBAAkB;AACtB;AACA;IACI,eAAe;AACnB;;AAEA;IACI,kCAAkC;AACtC",sourcesContent:["*{\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.container{\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: grid;\r\n    grid-template-columns: minmax(130px, 180px) 1fr;\r\n    grid-template-rows: 60px 1fr;\r\n}\r\n\r\nheader{\r\n    grid-column: 1/3;\r\n    grid-row: 1/2;\r\n    background-color: rgba(76, 76, 130, 0.596);\r\n}\r\n\r\nmain{\r\n    grid-column: 2/3;\r\n    grid-row: 2/3;\r\n    background-color: rgba(130, 80, 80, 0.511);\r\n}\r\n\r\naside{\r\n    background-color: rgba(114, 195, 114, 0.567);\r\n    grid-column: 1/2;\r\n    grid-row: 2/3;\r\n}\r\n.note{\r\n border: 5px dashed black;\r\n font-size: 1.5rem;\r\n border-radius: 10px;\r\n padding: 15px;\r\n margin:10px;\r\n}\r\n\r\n#dialog{\r\n    position: absolute;\r\n    height: 200px;\r\n    width: 400px;\r\n    top: 250px;\r\n    left: 550px;\r\n    padding: 30px;\r\n\r\n\r\n}\r\n\r\n#dialog::backdrop{\r\n    background: rgba(0, 0, 0, 0.696);\r\n}\r\n\r\n.projects{\r\n    margin-left: 10px;\r\n    /* height: 100%; */\r\n}\r\n.project_list{\r\n    /* height: 100%; */\r\n}\r\n.project_input{\r\n    cursor: pointer;\r\n}\r\n\r\n.active_project{\r\n    background-color: rgb(169, 65, 65);\r\n}"],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),t.push(d))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},i=[],c=0;c<e.length;c++){var s=e[c],l=r.base?s[0]+r.base:s[0],d=a[l]||0,p="".concat(l," ").concat(d);a[l]=d+1;var u=n(p),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)t[u].references++,t[u].updater(A);else{var g=o(A,r);r.byIndex=c,t.splice(c,0,{identifier:p,updater:g,references:1})}i.push(p)}return i}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=n(a[i]);t[c].references--}for(var s=r(e,o),l=0;l<a.length;l++){var d=n(a[l]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}a=s}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),r=n(795),o=n.n(r),a=n(569),i=n.n(a),c=n(565),s=n.n(c),l=n(216),d=n.n(l),p=n(589),u=n.n(p),A=n(426),g={};g.styleTagTransform=u(),g.setAttributes=s(),g.insert=i().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=d(),t()(A.Z,g),A.Z&&A.Z.locals&&A.Z.locals;const m=function(e){const t=document.querySelector(".todos");t.innerHTML="",console.log(),localStorage.getItem(e)&&JSON.parse(localStorage.getItem(e)).forEach((e=>{let n=document.createElement("div");n.innerHTML=`\n        <div class="note_title">title: ${e.title}</div>\n        <div class="note_priority">priority: ${e.priority}</div>\n        <div class="note_description"> desc: ${e.description}</div>\n        <div class="note_date">date: ${e.dueDate}</div>\n        `,n.classList.add("note"),t.appendChild(n)}))},f=class{constructor(e,t,n,r){this.title=e,this.description=t,this.dueDate=n,this.priority=r}editTitle(e){this.title=e}editPriority(e){this.priority=e}editDescription(e){this.description=e}editDate(e){this.dueDate=e}},C=function(){const e=document.querySelector(".project_list");e.innerHTML="",localStorage.getItem("projectList")&&JSON.parse(localStorage.getItem("projectList")).forEach((t=>{const n=document.createElement("li");n.classList.add("project_list_item"),n.addEventListener("click",(e=>{let t=(n=e.target,document.querySelectorAll(".project_list_item").forEach((e=>{e==n?e.classList.add("active_project"):e.classList.remove("active_project")})),document.getElementsByClassName("active_project")[0].firstElementChild.textContent);var n;m(t)})),n.innerHTML=`\n      <span class='project_name'>${t}</span>\n      <button class='delete_project_btn'>delete</button>\n      `,e.appendChild(n),document.querySelectorAll(".delete_project_btn").forEach((e=>{e.addEventListener("click",(e=>{let t=e.target.parentElement.firstElementChild.textContent;localStorage.removeItem(`${t}`);let n=JSON.parse(localStorage.getItem("projectList")),r=n.filter((e=>e!==t));localStorage.setItem("projectList",JSON.stringify(r)),e.target.parentElement.remove(),console.log(n)}))}))}))};(function(){const e=document.getElementById("dialog"),t=document.querySelector(".dialog_btn_create"),n=document.querySelector(".add_todo"),r=document.querySelector(".dialog_content");n.onclick=()=>{e.showModal()},t.addEventListener("click",(e=>{(function(e,t,n,r){const o=new f(e,t,n,r);let a,i=[];const c=document.getElementsByClassName("active_project")[0].firstElementChild.textContent;localStorage.getItem(c)&&(a=localStorage.getItem(c),i=JSON.parse(a)),i.push(o),localStorage.setItem(c,JSON.stringify(i)),m(c)})(document.querySelector(".dialog_title").value,document.querySelector(".dialog_description").value,document.querySelector(".dialog_priority").value,document.querySelector(".dialog_date").value),r.reset()})),document.querySelector(".project_list");const o=document.querySelector(".project-creator");o.addEventListener("keypress",(e=>{13===(e.which||e.keyCode)&&(function(e){let t,n=[];localStorage.getItem("projectList")&&(t=localStorage.getItem("projectList"),n=JSON.parse(t)),n.push(e),localStorage.setItem(`${e}`,JSON.stringify([])),localStorage.setItem("projectList",JSON.stringify(n))}(o.value),o.value="",C())}))})(),C(),m()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,