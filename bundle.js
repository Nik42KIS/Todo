(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([e.id,"*{\n    margin: 0;\n    padding: 0;\n}\n\n.container{\n    height: 100vh;\n    width: 100vw;\n    display: grid;\n    grid-template-columns: minmax(130px, 180px) 1fr;\n    grid-template-rows: 60px 1fr;\n}\n\nheader{\n    grid-column: 1/3;\n    grid-row: 1/2;\n    background-color: rgba(76, 76, 130, 0.596);\n}\n\nmain{\n    grid-column: 2/3;\n    grid-row: 2/3;\n    background-color: rgba(130, 80, 80, 0.511);\n}\n\naside{\n    background-color: rgba(114, 195, 114, 0.567);\n    grid-column: 1/2;\n    grid-row: 2/3;\n}\n.note{\n border: 5px dashed black;\n font-size: 1.5rem;\n border-radius: 10px;\n padding: 15px;\n margin:10px;\n}\n\n#dialog{\n    position: absolute;\n    height: 200px;\n    width: 400px;\n    top: 250px;\n    left: 550px;\n    padding: 30px;\n\n\n}\n\n#dialog::backdrop{\n    background: rgba(0, 0, 0, 0.696);\n}\n\n.projects{\n    margin-left: 10px;\n    /* height: 100%; */\n}\n.project_list{\n    /* height: 100%; */\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,aAAa;IACb,+CAA+C;IAC/C,4BAA4B;AAChC;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,0CAA0C;AAC9C;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,0CAA0C;AAC9C;;AAEA;IACI,4CAA4C;IAC5C,gBAAgB;IAChB,aAAa;AACjB;AACA;CACC,wBAAwB;CACxB,iBAAiB;CACjB,mBAAmB;CACnB,aAAa;CACb,WAAW;AACZ;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,YAAY;IACZ,UAAU;IACV,WAAW;IACX,aAAa;;;AAGjB;;AAEA;IACI,gCAAgC;AACpC;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;AACtB;AACA;IACI,kBAAkB;AACtB",sourcesContent:["*{\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.container{\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: grid;\r\n    grid-template-columns: minmax(130px, 180px) 1fr;\r\n    grid-template-rows: 60px 1fr;\r\n}\r\n\r\nheader{\r\n    grid-column: 1/3;\r\n    grid-row: 1/2;\r\n    background-color: rgba(76, 76, 130, 0.596);\r\n}\r\n\r\nmain{\r\n    grid-column: 2/3;\r\n    grid-row: 2/3;\r\n    background-color: rgba(130, 80, 80, 0.511);\r\n}\r\n\r\naside{\r\n    background-color: rgba(114, 195, 114, 0.567);\r\n    grid-column: 1/2;\r\n    grid-row: 2/3;\r\n}\r\n.note{\r\n border: 5px dashed black;\r\n font-size: 1.5rem;\r\n border-radius: 10px;\r\n padding: 15px;\r\n margin:10px;\r\n}\r\n\r\n#dialog{\r\n    position: absolute;\r\n    height: 200px;\r\n    width: 400px;\r\n    top: 250px;\r\n    left: 550px;\r\n    padding: 30px;\r\n\r\n\r\n}\r\n\r\n#dialog::backdrop{\r\n    background: rgba(0, 0, 0, 0.696);\r\n}\r\n\r\n.projects{\r\n    margin-left: 10px;\r\n    /* height: 100%; */\r\n}\r\n.project_list{\r\n    /* height: 100%; */\r\n}"],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),n.push(d))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],c=0;c<e.length;c++){var s=e[c],l=r.base?s[0]+r.base:s[0],d=a[l]||0,u="".concat(l," ").concat(d);a[l]=d+1;var p=t(u),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)n[p].references++,n[p].updater(A);else{var g=o(A,r);r.byIndex=c,n.splice(c,0,{identifier:u,updater:g,references:1})}i.push(u)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=t(a[i]);n[c].references--}for(var s=r(e,o),l=0;l<a.length;l++){var d=t(a[l]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}a=s}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),a=t(569),i=t.n(a),c=t(565),s=t.n(c),l=t(216),d=t.n(l),u=t(589),p=t.n(u),A=t(426),g={};g.styleTagTransform=p(),g.setAttributes=s(),g.insert=i().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=d(),n()(A.Z,g),A.Z&&A.Z.locals&&A.Z.locals;const m=class{constructor(e,n,t,r){this.title=e,this.description=n,this.dueDate=t,this.priority=r}editTitle(e){this.title=e}editPriority(e){this.priority=e}editDescription(e){this.description=e}editDate(e){this.dueDate=e}},f=function(e,n,t,r){const o=new m(e,n,t,r);let a,i=[];localStorage.getItem("curProject")&&(a=localStorage.getItem("curProject")?localStorage.getItem("curProject"):"",i=JSON.parse(a)),i.push(o),localStorage.setItem("curProject",JSON.stringify(i)),function(){const e=document.querySelector(".todos");e.innerHTML="",JSON.parse(localStorage.getItem("curProject")).forEach((n=>{let t=document.createElement("div");t.innerHTML=`\n        <div class="note_title">title: ${n.title}</div>\n        <div class="note_priority">priority: ${n.priority}</div>\n        <div class="note_description"> desc: ${n.description}</div>\n        <div class="note_date">date: ${n.dueDate}</div>\n        `,t.classList.add("note"),e.appendChild(t)}))}()};!function(){const e=document.getElementById("dialog"),n=document.querySelector(".dialog_btn_create");document.querySelector(".add_todo").onclick=()=>{console.log(`dialog: ${e}`),e.showModal()},n.addEventListener("click",(e=>{const n=document.querySelector(".dialog_title").value,t=document.querySelector(".dialog_description").value,r=document.querySelector(".dialog_priority").value,o=document.querySelector(".dialog_date").value;f(n,t,r,o),dialog_form.reset()}));const t=document.querySelector(".project_list"),r=document.querySelector(".project-creator");r.addEventListener("keypress",(e=>{if(13===(e.which||e.keyCode)){const e=document.createElement("li");e.classList.add("project_list_item"),e.innerHTML=`\n                       <input value=${r.value} placeholder="type name of project" type="text">\n                       <button class='edit_project_btn'>edit</button>\n                       <button class='delete_project_btn'>delete</button>\n           `,t.appendChild(e),function(e){let n,t=[];localStorage.getItem(`${e}`)&&(n=localStorage.getItem(`${e}`)?localStorage.getItem(`${e}`):"",t=JSON.parse(n)),localStorage.setItem(`${e}`,JSON.stringify(t))}(r.value),r.value="",r.blur();const n=document.querySelectorAll(".delete_project_btn");document.querySelector(".edit_project_btn"),n.forEach((e=>{e.addEventListener("click",(e=>{console.log(e.target.previousElementSibling.previousElementSibling.value);let n=e.target.previousElementSibling.previousElementSibling.value;localStorage.removeItem(`${n}`),console.log("parent:",e.target.parentElement),e.target.parentElement.remove()}))}))}}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,